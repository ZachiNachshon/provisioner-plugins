[tool.poetry]
name = "provisioner_installers_plugin"
version = "0.1.2"
description = "Python Installers Library"
authors = ["Zachi Nachshon <zachi.nachshon@gmail.com>"]
exclude = [
    "**/*_test*", 
    "**/*_fake*", 
    "dist", 
    "htmlcov", 
    "poetry.lock", 
    "pytest", 
    "Makefile", 
    "runners", 
    ".gitignore",
    ".coverage",
    ".coveragerc",
    ".git-deps",
    ".pytest_cache"]

# Include relative modules using the poetry-mutiproject-plugin
packages = [
    { include = "provisioner_installers_plugin", from = "../provisioner_installers_plugin" },
    { include = "provisioner_features_lib", from = "../../provisioner_features_lib" }
]

[tool.poetry.scripts]
# This module is not meant to be used as a standalone CLI, rather used as a plugin/library for a module with a main entry point i.e. provisioner
test_runner = "provisioner_installers_plugin.main_fake:fake_app"
# poetry run installers_plugin
installers_plugin = "provisioner_installers_plugin.main_dev:main"

[tool.poetry.dependencies]
python = "^3.10"

# For production and PyPi publishing
# provisioner-runtime = "^0.1.2"

# For development or testing, uncomment the line below
# provisioner_runtime = { path = "../../provisioner", develop = true }

# 
# DEV DEPENDENCIES AND THEIR CONFIGS ARE AUTO GENERATED USING:
#   make set-dev-deps
# 

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"