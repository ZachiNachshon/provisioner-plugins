# name: CI

# on:
#   push:
#     branches:
#       - master

#   pull_request:
#     branches:
#       - master

# env:
#   # Semantic version range syntax (3.x) or exact version of a Python version
#   PYTHON_VERSION: "3.10"
#   POETRY_VERSION: "1.2.1"

# jobs:
#   build:
#     name: Tests Suite
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repo code
#         uses: actions/checkout@v3

#       - name: Set up Python ${{ env.PYTHON_VERSION }}
#         id: setup-python
#         uses: actions/setup-python@v4
#         with:
#           python-version: ${{ env.PYTHON_VERSION }}

#       - name: Install Poetry
#         uses: snok/install-poetry@v1
#         with:
#           version: ${{ env.POETRY_VERSION }}
          
#       - name: Load cached venv
#         id: cached-poetry-dependencies
#         uses: actions/cache@v2
#         with:
#           path: .venv
#           key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

#       # - name: Load cached Poetry installation
#       #   uses: actions/cache@v2
#       #   with:
#       #     path: ~/.local  # the path depends on the OS
#       #     key: poetry-0  # increment to reset cache

#       - name: Create virtual environment
#         if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
#         run: make create-update-venv

#       - name: Run tests
#         run: make test-ci
      
#       # Requires CODECOV_TOKEN in GitHub repository secrets
#       - name: Upload coverage
#         uses: codecov/codecov-action@v1
#         with:
#           token: ${{ secrets.CODECOV_TOKEN }}  # Only required for private repositories
#           file: ./coverage.xml
#           fail_ci_if_error: true