name: Publish Provisioner Plugins to PyPi (auto version increment)

on:
  workflow_dispatch:
    inputs:
      plugin_to_publish:
        type: choice
        description: 'Select an plugin to publish to PyPi'
        options: 
          - 'examples-plugin'
          - 'installers-plugin'
          - 'single-board-plugin'
          - 'all'
        required: true

env:
  PYPI_API_TOKEN: ${{ secrets.PROVISIONER_PYPI_API_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GH_ACTION_PLUGIN_TO_PUBLISH: ${{ github.event.inputs.plugin_to_publish }}
  POETRY_VERSION: "1.4.1"
  
jobs:
  publis_to_pypi:
    name: Publish provisioner plugins to PyPi
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [ '3.10' ]

    steps:
      - name: Checkout ZachiNachshon/provisioner
        uses: actions/checkout@v3
        with:
          repository: 'ZachiNachshon/provisioner'
          token: ${{ secrets.PROVISIONER_REPO_ACCESS_TOKEN }}
          ref: fix-github-actions

      - name: Checkout ZachiNachshon/provisioner-plugins
        uses: actions/checkout@v3
        with:
          path: './plugins'
          ref: fix-github-actions

      - name: Setup Environment
        uses: ./.github/actions/setup
        env:
          PYTHON_VERSION: ${{ matrix.python }}
          POETRY_VERSION: ${{ env.POETRY_VERSION }}

      - name: Install Required pip packages
        run: |
          pip install coverage twine

      - name: Run Tests
        uses: ./.github/actions/tests
        with:
          use_provisioner_from: pypi
          modules_to_test: ${{ github.event.inputs.plugin_to_publish }}

      - name: Prepare git for commit
        run: |
          git config --global user.email "zachi.nachshon@gmail.com"
          git config --global user.name "ZachiNachshon"
          git checkout -b released-plugins-ver

      - name: Publish examples-plugin to PyPi
        if: ${{ github.event.inputs.plugin_to_publish == 'examples-plugin' || github.event.inputs.plugin_to_publish == 'all' }}
        run: |
          cd plugins/provisioner_examples_plugin
          poetry version patch
          ver=$(poetry version | awk '{print $2}' | tr -d '\n')
          echo -n $ver > provisioner_examples_plugin/resources/version.txt
          git add provisioner_examples_plugin/resources/version.txt
          git add pyproject.toml
          git commit -m "Released provisioner-example-plugins version ${ver}"
          make pip-publish-pypi
          cd ../..

      - name: Publish installers-plugin to PyPi
        if: ${{ github.event.inputs.plugin_to_publish == 'installers-plugin' || github.event.inputs.plugin_to_publish == 'all' }}
        run: |
          cd plugins/provisioner_installers_plugin
          poetry version patch
          ver=$(poetry version | awk '{print $2}' | tr -d '\n')
          echo -n $ver > provisioner_installers_plugin/resources/version.txt
          git add provisioner_installers_plugin/resources/version.txt
          git add pyproject.toml
          git commit -m "Released provisioner-installers-plugins version ${ver}"
          make pip-publish-pypi
          cd ../..
        
      - name: Publish single-board-plugin to PyPi
        if: ${{ github.event.inputs.plugin_to_publish == 'single-board-plugin' || github.event.inputs.plugin_to_publish == 'all' }}
        run: |
          cd plugins/provisioner_single_board_plugin
          poetry version patch
          ver=$(poetry version | awk '{print $2}' | tr -d '\n')
          echo -n $ver > provisioner_single_board_plugin/resources/version.txt
          git add provisioner_single_board_plugin/resources/version.txt
          git add pyproject.toml
          git commit -m "Released provisioner-single-board-plugins version ${ver}"
          make pip-publish-pypi
          cd ../..

      - name: Commit new versions bump
        run: |
          git push --set-upstream origin released-plugins-ver
          gh pr create --title "Released provisioner plugins version" \
              --body "Released provisioner plugins version" \
              --base master --head released-plugins-ver \
              --label "auto pr"